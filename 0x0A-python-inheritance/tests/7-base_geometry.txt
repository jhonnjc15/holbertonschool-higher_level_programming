The ```7-base_geometry``` module
============================

Import module:
==============
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry


tests:
=======

>>> bg = BaseGeometry()

>>> bg.integer_validator("my_int", "John")
Traceback (most recent call last):
TypeError: my_int must be an integer

>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
ValueError: age must be greater than 0

>>> bg.area()
Traceback (most recent call last):
Exception: area() is not implemented

>>> bg.integer_validator()
Traceback (most recent call last):
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

>>> bg.integer_validator("my_int", [10])
Traceback (most recent call last):
TypeError: my_int must be an integer

>>> bg.integer_validator("my_int", {1,2})
Traceback (most recent call last):
TypeError: my_int must be an integer

>>> bg.integer_validator("my_int", False)
Traceback (most recent call last):
TypeError: my_int must be an integer

>>> bg.integer_validator("my_int", None)
Traceback (most recent call last):   
TypeError: my_int must be an integer

>>> bg.integer_validator("my_int", (20,))
Traceback (most recent call last):
TypeError: my_int must be an integer

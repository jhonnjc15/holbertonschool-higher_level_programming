The ```0-add_integer``` module
============================

Using ```add_integer```
-----------------------

Import
======
>>> add_integer = __import__("0-add_integer").add_integer

Correct
=======
# checks for the correct outputs

>>> add_integer(1, 2)
3

>>> add_integer(100, -2)
98

>>> add_integer(2)
100

>>> add_integer(100.3, -2)
98

Incorrect
===========
# checks for TypeErrors:


>>> add_integer(None, 0)
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(None)
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(4, "School")
Traceback (most recent call last):
TypeError: b must be an integer

>>> add_integer(2, {2, 3})
Traceback (most recent call last):
TypeError: b must be an integer

>> add_integer([1, 1], 1)
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer()
Traceback (most recent call last):
TypeError: add_integer() missing 1 required positional argument: 'a'

>>> add_integer(1,2,3)
Traceback (most recent call last):
TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given

# checks for OverflowError:


>>> add_integer(float('inf'))
Traceback (most recent call last):
OverflowError: cannot convert float infinity to integer

>>> add_integer(0, float('inf'))
Traceback (most recent call last):
OverflowError: cannot convert float infinity to integer
